<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:hdfs="http://www.mulesoft.org/schema/mule/hdfs"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.mulesoft.org/schema/mule/core"
      version="EE-3.6.0" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/hdfs http://www.mulesoft.org/schema/mule/hdfs/current/mule-hdfs.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <spring:beans>
        <spring:bean id="regex" name="regex" class="org.mulesoft.demo.RegexIncludePathFilter">
            <spring:constructor-arg name="regex" value="#[message.inboundProperties.'http.query.params'.regex]"/>
        </spring:bean>
    </spring:beans>
    <hdfs:config name="hdfs-conf" nameNodeUri="${nameNodeUri}" username="${sysUser}" doc:name="HDFS"/>
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8090" doc:name="HTTP Listener Configuration"/>
    <flow name="Delete_File_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/filedelete" doc:name="HTTP"/>
        <logger message="Deleting file: #[message.inboundProperties.'http.query.params'.path]" level="INFO" doc:name="Delete file log"/>
        <hdfs:delete-file config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]" doc:name="Delete file"/>
    </flow>
    <flow name="Create_File_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/filecreate" doc:name="HTTP"/>
        <logger message="Creating file: #[message.inboundProperties.'http.query.params'.path] with message: #[message.inboundProperties.'http.query.params'.msg]"
                level="INFO" doc:name="Write to Path Log"/>
        <set-payload value="#[message.inboundProperties.'http.query.params'.msg]" doc:name="Set the message input as payload"/>
        <hdfs:write config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]" permission="755"
                    doc:name="Write to Path"/>
    </flow>
    <flow name="Append_File_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/fileappend" doc:name="HTTP"/>
        <logger message="Appending file: #[message.inboundProperties.'http.query.params'.path] with message: #[message.inboundProperties.'http.query.params'.msg]"
                level="INFO" doc:name="Append to File Log"/>
        <set-payload value="#[message.inboundProperties.'http.query.params'.msg]" doc:name="Set the message input as payload"/>
        <hdfs:append config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]" doc:name="Append to path"/>
    </flow>
    <flow name="Retrieve_File_Flow" initialState="stopped" >
        <hdfs:read config-ref="hdfs-conf" path="#[payload]" doc:name="Read From Path"/>
        <object-to-string-transformer doc:name="Convert payload to String"/>
        <logger message="#[payload]" level="INFO" doc:name="Read from Path Log"/>
    </flow>
    <flow name="Delete_Directory_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/dirdelete" doc:name="HTTP"/>
        <logger message="Deleting dir: #[message.inboundProperties.'http.query.params'.path]" level="INFO"
                doc:name="Delete Directory Log"/>
        <hdfs:delete-directory config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]"
                               doc:name="Delete Directory"/>
    </flow>
    <flow name="Create_Directory_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/dircreate" doc:name="HTTP"/>
        <logger message="Creating Directory: #[message.inboundProperties.'http.query.params'.path]" level="INFO"
                doc:name="Create Directory Log"/>
        <hdfs:make-directories config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]" permission="755"
                               doc:name="Create Directory"/>
    </flow>
    <flow name="Meta_Data_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/metadata" doc:name="HTTP"/>
        <logger message="Meta-Data from path: #[message.inboundProperties.'http.query.params'.path]" level="INFO"
                doc:name="MetaData Log"/>
        <hdfs:get-metadata config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]"
                           doc:name="Get Path Meta Data" doc:description="The &amp;quot;Get Path Meta Data&amp;quot; processor will obtain META-DATA from a path that can be either a file or a directory.
The way that this info is gathered is that once the process is executed, the result will be stored in flowVars.

These vars are:
hdfs.path.exists - Indicates if the path exists (true or false)
hdfs.content.summary - A resume of the path info
hdfs.file.checksum - MD5 digest of the file (if it is a file and exists)
hdfs.file.status - The status of the file"/>
        <set-payload
                value="#[['path': message.inboundProperties['http.query.params'].path,'pathExists':flowVars['hdfs.path.exists'],'contentSummary':flowVars['hdfs.content.summary'],'fileStatus':flowVars['hdfs.file.status'],'fileChecksum':flowVars['hdfs.file.checksum']]]"
                doc:name="Get the Meta-Data from the flowVars"/>
        <object-to-string-transformer mimeType="text/plain" doc:name="Convert payload to String"/>
    </flow>
    <flow name="Copy_From_Local_File_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/copyfromlocalfile" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Copy from Local Path Log"
                message="Copying from local path : #[message.inboundProperties.'http.query.params'.source] to file system : #[message.inboundProperties.'http.query.params'.target]"/>
        <hdfs:copy-from-local-file config-ref="hdfs-conf" source="#[message.inboundProperties.'http.query.params'.source]"
                                   target="#[message.inboundProperties.'http.query.params'.target]" doc:name="Copy from Local Path"/>
    </flow>
    <flow name="Copy_To_Local_File_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/copytolocalfile" doc:name="HTTP"/>
        <logger message="Copying to local path : #[message.inboundProperties.'http.query.params'.target] from file system : #[message.inboundProperties.'http.query.params'.source]"
                level="INFO" doc:name="Copy to Local Path Log"/>
        <hdfs:copy-to-local-file config-ref="hdfs-conf" source="#[message.inboundProperties.'http.query.params'.source]"
                                 target="#[message.inboundProperties.'http.query.params'.target]" doc:name="Copy to Local Path"/>
    </flow>
    <flow name="Rename_flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/rename" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Rename path log"
                message="Rename path : #[message.inboundProperties.'http.query.params'.source] to #[message.inboundProperties.'http.query.params'.target]"/>
        <hdfs:rename config-ref="hdfs-conf" source="#[message.inboundProperties.'http.query.params'.source]"
                     target="#[message.inboundProperties.'http.query.params'.target]" doc:name="Rename Path"/>
        <object-to-string-transformer doc:name="Convert payload to String"/>
    </flow>
    <flow name="Set_Permission_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/setpermission" doc:name="HTTP"/>
        <logger message="Set Permission on path : #[message.inboundProperties.'http.query.params'.path]" level="INFO"
                doc:name="Set Permission Log"/>
        <hdfs:set-permission config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]" permission="755"
                             doc:name="Set Permission"/>
    </flow>
    <flow name="Set_Owner_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/setowner" doc:name="HTTP"/>
        <logger message="Set owner on path : #[message.inboundProperties.'http.query.params'.path]" level="INFO"
                doc:name="Set Owner Log"/>
        <hdfs:set-owner config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]" doc:name="Set Owner"
                        groupname="#[message.inboundProperties.'http.query.params'.group]"/>
    </flow>
    <flow name="List_Status_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/liststatus" doc:name="HTTP"/>
        <logger message="List Status path : #[message.inboundProperties.'http.query.params'.path]" level="INFO"
                doc:name="List Status Log"/>
        <hdfs:list-status config-ref="hdfs-conf" path="#[message.inboundProperties.'http.query.params'.path]" doc:name="List Status"/>
        <mulexml:object-to-xml-transformer doc:name="Convert payload to XML"/>
    </flow>
    <flow name="Glob_Status_Flow" >
        <http:listener config-ref="HTTP_Listener_Configuration" path="/globstatus" doc:name="HTTP"/>
        <logger message="Glob Status path : #[message.inboundProperties.'http.query.params'.path]" level="INFO"
                doc:name="Glob Status Log"/>
        <hdfs:glob-status config-ref="hdfs-conf" doc:name="Glob Status" filter-ref="regex"
                          pathPattern="#[message.inboundProperties.'http.query.params'.path]"/>
        <mulexml:object-to-xml-transformer doc:name="Convert payload to XML"/>
    </flow>
</mule>
