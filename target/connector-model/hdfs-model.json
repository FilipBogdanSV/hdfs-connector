{
  "minMuleVersion": "3.6.0",
  "requiresEntitlement": false,
  "requiresEnterpriseLicense": true,
  "configs": [
    {
      "configElementName": "config-with-kerberos",
      "attributes": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "nameNodeUri",
          "description": "The name of the file system to connect to. It is passed to HDFS client as the {FileSystem#FS_DEFAULT_NAME_KEY} configuration entry. It can be overriden by values in configurationResources and configurationEntries."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "keytabPath",
          "description": "Path to the \u003ca href\u003d\"https://web.mit.edu/kerberos/krb5-1.12/doc/basic/keytab_def.html\"\u003ekeytab file\u003c/a\u003e associated with username. It is used in order to obtain TGT from\n\"Authorization server\". If not provided it will look for a TGT associated to username within your local kerberos cache."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "username",
          "description": "A simple user identity of a client process. It is passed to HDFS client as the \"hadoop.job.ugi\" configuration entry. It can be overriden by values in configurationResources\nand configurationEntries."
        },
        {
          "javaTypeName": "List\u003cString\u003e",
          "fullQualifiedJavaTypeName": "java.util.List\u003cjava.lang.String\u003e",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "java.util.List\u003cjava.lang.String\u003e",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "configurationResources",
          "description": "A {@link java.util.List} of configuration resource files to be loaded by the HDFS client. Here you can provide additional configuration files. (e.g core-site.xml)"
        },
        {
          "javaTypeName": "Map\u003cString,String\u003e",
          "fullQualifiedJavaTypeName": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
          "isHttpCallback": false,
          "isArrayOrListOrMap": true,
          "javaName": "configurationEntries",
          "description": "A {@link java.util.Map} of configuration entries to be used by the HDFS client. Here you can provide additional configuration entries as key/value pairs."
        }
      ],
      "javaName": "Kerberos",
      "friendlyName": "Kerberos Configuration",
      "description": "Kerberos authentication configuration. Here you can configure properties required by \"Kerberos Authentication\" in order to establish connection with Hadoop Distributed File\nSystem.",
      "type": "ConnectionManagementConfig"
    },
    {
      "configElementName": "config",
      "attributes": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "nameNodeUri",
          "description": "The name of the file system to connect to. It is passed to HDFS client as the {FileSystem#FS_DEFAULT_NAME_KEY} configuration entry. It can be overriden by values in configurationResources and configurationEntries."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "username",
          "description": "A simple user identity of a client process. It is passed to HDFS client as the \"hadoop.job.ugi\" configuration entry. It can be overriden by values in configurationResources\nand configurationEntries."
        },
        {
          "javaTypeName": "List\u003cString\u003e",
          "fullQualifiedJavaTypeName": "java.util.List\u003cjava.lang.String\u003e",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "java.util.List\u003cjava.lang.String\u003e",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "configurationResources",
          "description": "A {@link java.util.List} of configuration resource files to be loaded by the HDFS client. Here you can provide additional configuration files. (e.g core-site.xml)"
        },
        {
          "javaTypeName": "Map\u003cString,String\u003e",
          "fullQualifiedJavaTypeName": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "java.util.Map\u003cjava.lang.String,java.lang.String\u003e",
          "isHttpCallback": false,
          "isArrayOrListOrMap": true,
          "javaName": "configurationEntries",
          "description": "A {@link java.util.Map} of configuration entries to be used by the HDFS client. Here you can provide additional configuration entries as key/value pairs."
        }
      ],
      "javaName": "Simple",
      "friendlyName": "Simple Configuration",
      "description": "Simple authentication configuration. Here you can configure properties required by \"Simple Authentication\" in order to establish connection with Hadoop Distributed File System.",
      "type": "ConnectionManagementConfig"
    }
  ],
  "attributes": [],
  "processors": [
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Reading a file using with an operation rather than pooling with an endpoint --\u003e\n\u003chdfs:read-operation path\u003d\"/tmp/test.dat\" bufferSize\u003d\"8192\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "InputStream",
        "fullQualifiedJavaTypeName": "java.io.InputStream",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": "the result from executing the rest of the flow."
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the file to read."
        },
        {
          "javaTypeName": "int",
          "fullQualifiedJavaTypeName": "int",
          "defaultValue": "4096",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "int",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "bufferSize",
          "description": "the buffer size to use when reading the file."
        }
      ],
      "apiDocUrl": "",
      "javaName": "readOperation",
      "friendlyName": "Read from path",
      "description": "Read the content of a file designated by its path and streams it to the rest of the flow:",
      "xsdName": "read-operation"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Store the meta-information of a path in flow variables --\u003e\n\u003chdfs:get-metadata path\u003d\"/tmp/test.dat\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path whose existence must be checked."
        },
        {
          "javaTypeName": "MuleEvent",
          "fullQualifiedJavaTypeName": "org.mule.api.MuleEvent",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "org.mule.api.MuleEvent",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "muleEvent",
          "description": "the {@link MuleEvent} currently being processed."
        }
      ],
      "apiDocUrl": "",
      "javaName": "getMetadata",
      "friendlyName": "Get path meta data",
      "description": "Get the metadata of a path, as described in {@link HDFSConnector#read(String, int, SourceCallback)}, and store it in flow variables.\n\u003cp\u003e\nThis flow variables are:\n\u003cul\u003e\n\u003cli\u003ehdfs.path.exists - Indicates if the path exists (true or false)\u003c/li\u003e\n\u003cli\u003ehdfs.content.summary - A resume of the path info\u003c/li\u003e\n\u003cli\u003ehdfs.file.checksum - MD5 digest of the file (if it is a file and exists)\u003c/li\u003e\n\u003cli\u003ehdfs.file.status - A Hadoop object that contains info about the status of the file (org.apache.hadoop.fs.FileStatus\u003c/li\u003e\n\u003c/ul\u003e",
      "xsdName": "get-metadata"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the file to write to."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "defaultValue": "700",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "permission",
          "description": "the file system permission to use if a new file is created, either in octal or symbolic format (umask)."
        },
        {
          "javaTypeName": "boolean",
          "fullQualifiedJavaTypeName": "boolean",
          "defaultValue": "true",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "boolean",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "overwrite",
          "description": "if a pre-existing file should be overwritten with the new content."
        },
        {
          "javaTypeName": "int",
          "fullQualifiedJavaTypeName": "int",
          "defaultValue": "4096",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "int",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "bufferSize",
          "description": "the buffer size to use when appending to the file."
        },
        {
          "javaTypeName": "int",
          "fullQualifiedJavaTypeName": "int",
          "defaultValue": "1",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "int",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "replication",
          "description": "block replication for the file."
        },
        {
          "javaTypeName": "long",
          "fullQualifiedJavaTypeName": "long",
          "defaultValue": "1048576",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "long",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "blockSize",
          "description": "the buffer size to use when appending to the file."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "ownerUserName",
          "description": "the username owner of the file."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "ownerGroupName",
          "description": "the group owner of the file."
        },
        {
          "javaTypeName": "InputStream",
          "fullQualifiedJavaTypeName": "java.io.InputStream",
          "defaultValue": "#[payload]",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "java.io.InputStream",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "payload",
          "description": "the payload to write to the file."
        }
      ],
      "apiDocUrl": "",
      "javaName": "write",
      "friendlyName": "Write to path",
      "description": "Write the current payload to the designated path, either creating a new file or appending to an existing one.",
      "xsdName": "write"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the file to write to."
        },
        {
          "javaTypeName": "int",
          "fullQualifiedJavaTypeName": "int",
          "defaultValue": "4096",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "int",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "bufferSize",
          "description": "the buffer size to use when appending to the file."
        },
        {
          "javaTypeName": "InputStream",
          "fullQualifiedJavaTypeName": "java.io.InputStream",
          "defaultValue": "#[payload]",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "java.io.InputStream",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "payload",
          "description": "the payload to append to the file."
        }
      ],
      "apiDocUrl": "",
      "javaName": "append",
      "friendlyName": "Append to file",
      "description": "Append the current payload to a file located at the designated path. \u003cb\u003eNote:\u003c/b\u003e by default the Hadoop server has the append option disabled. In order to be able append any\ndata to an existing file refer to dfs.support.append configuration parameter",
      "xsdName": "append"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Delete a file --\u003e\n\u003chdfs:delete-file path\u003d\"/tmp/test.dat\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the file to delete."
        }
      ],
      "apiDocUrl": "",
      "javaName": "deleteFile",
      "friendlyName": "Delete file",
      "description": "Delete the file or directory located at the designated path.",
      "xsdName": "delete-file"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Delete a directory --\u003e\n\u003chdfs:delete-directory path\u003d\"/tmp/my-dir\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the directory to delete."
        }
      ],
      "apiDocUrl": "",
      "javaName": "deleteDirectory",
      "friendlyName": "Delete directory",
      "description": "Delete the file or directory located at the designated path.",
      "xsdName": "delete-directory"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path to create directories for."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "permission",
          "description": "the file system permission to use when creating the directories, either in octal or symbolic format (umask)."
        }
      ],
      "apiDocUrl": "",
      "javaName": "makeDirectories",
      "friendlyName": "Make directories",
      "description": "Make the given file and all non-existent parents into directories. Has the semantics of Unix \u0027mkdir -p\u0027. Existence of the directory hierarchy is not an error.",
      "xsdName": "make-directories"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Rename any source directory or file to the provided target path --\u003e\n\u003chdfs:rename source\u003d\"/tmp/my-dir\" target\u003d\"/tmp/new-dir\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "Boolean",
        "fullQualifiedJavaTypeName": "java.lang.Boolean",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": "Boolean true if rename is successful."
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "source",
          "description": "the source path to be renamed."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "target",
          "description": "the target new path after rename."
        }
      ],
      "apiDocUrl": "",
      "javaName": "rename",
      "friendlyName": "Rename",
      "description": "Renames path target to path destination.",
      "xsdName": "rename"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- List the statuses of the given path --\u003e\n\u003chdfs:list-status path\u003d\"/tmp/my-dir\" filter\u003d\"^.*/2014/02/$\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "List\u003cFileStatus\u003e",
        "fullQualifiedJavaTypeName": "java.util.List\u003corg.apache.hadoop.fs.FileStatus\u003e",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": "FileStatus the statuses of the files/directories in the given path"
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the given path"
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "filter",
          "description": "the user supplied path filter"
        }
      ],
      "apiDocUrl": "",
      "javaName": "listStatus",
      "friendlyName": "List status",
      "description": "List the statuses of the files/directories in the given path if the path is a directory",
      "xsdName": "list-status"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Return all the files that match file pattern, sorted by their names --\u003e\n\u003chdfs:glob-status pathPattern\u003d\"/tmp/*/*\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "List\u003cFileStatus\u003e",
        "fullQualifiedJavaTypeName": "java.util.List\u003corg.apache.hadoop.fs.FileStatus\u003e",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": "FileStatus an array of paths that match the path pattern."
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "pathPattern",
          "description": "a regular expression specifying the path pattern."
        },
        {
          "javaTypeName": "PathFilter",
          "fullQualifiedJavaTypeName": "org.apache.hadoop.fs.PathFilter",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "org.apache.hadoop.fs.PathFilter",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "filter",
          "description": "the user supplied path filter"
        }
      ],
      "apiDocUrl": "",
      "javaName": "globStatus",
      "friendlyName": "Glob status",
      "description": "Return all the files that match file pattern and are not checksum files. Results are sorted by their names.",
      "xsdName": "glob-status"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Copy from source local disk to the target FileSystem --\u003e\n\u003chdfs:copy-from-local-file deleteSource\u003d\"true\" overwrite\u003d\"false\" source\u003d\"/tmp/mulesoft/\" target\u003d\"/user/mulesoft/\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "boolean",
          "fullQualifiedJavaTypeName": "boolean",
          "defaultValue": "false",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "boolean",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "deleteSource",
          "description": "whether to delete the source."
        },
        {
          "javaTypeName": "boolean",
          "fullQualifiedJavaTypeName": "boolean",
          "defaultValue": "true",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "boolean",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "overwrite",
          "description": "whether to overwrite a existing file."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "source",
          "description": "the source path on the local disk."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "target",
          "description": "the target path on the File System."
        }
      ],
      "apiDocUrl": "",
      "javaName": "copyFromLocalFile",
      "friendlyName": "Copy from local file",
      "description": "Copy the source file on the local disk to the FileSystem at the given target path, set deleteSource if the source should be removed.",
      "xsdName": "copy-from-local-file"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Copy to source local disk from the target FileSystem --\u003e\n\u003chdfs:copy-to-local-file deleteSource\u003d\"false\" useRawLocalFileSystem\u003d\"false\" source\u003d\"/tmp/mulesoft/\" target\u003d\"/user/mulesoft/\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "boolean",
          "fullQualifiedJavaTypeName": "boolean",
          "defaultValue": "false",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "boolean",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "deleteSource",
          "description": "whether to delete the source."
        },
        {
          "javaTypeName": "boolean",
          "fullQualifiedJavaTypeName": "boolean",
          "defaultValue": "false",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "boolean",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "useRawLocalFileSystem",
          "description": "whether to use RawLocalFileSystem as local file system or not."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "source",
          "description": "the source path on the File System."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "target",
          "description": "the target path on the local disk."
        }
      ],
      "apiDocUrl": "",
      "javaName": "copyToLocalFile",
      "friendlyName": "Copy to local file",
      "description": "Copy the source file on the FileSystem to local disk at the given target path, set deleteSource if the source should be removed. useRawLocalFileSystem indicates whether to\nuse RawLocalFileSystem as it is a non CRC File System.",
      "xsdName": "copy-to-local-file"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Set permission of a path to change. --\u003e\n\u003chdfs:set-permission path\u003d\"/tmp/my-dir\" permission\u003d\"511\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the file or directory to set permission."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "permission",
          "description": "the file system permission to be set."
        }
      ],
      "apiDocUrl": "",
      "javaName": "setPermission",
      "friendlyName": "Set permission",
      "description": "Set permission of a path (i.e., a file or a directory).",
      "xsdName": "set-permission"
    },
    {
      "isPaged": false,
      "isBatch": false,
      "samples": [
        "\u003c!-- Set owner of a path to change. --\u003e\n\u003chdfs:set-owner path\u003d\"/tmp/my-dir\" ownername\u003d\"mulesoft\" groupname\u003d\"supergroup\" config-ref\u003d\"hdfs-conf\"/\u003e"
      ],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the file or directory to set owner."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "ownername",
          "description": "If it is null, the original username remains unchanged."
        },
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "groupname",
          "description": "If it is null, the original groupname remains unchanged."
        }
      ],
      "apiDocUrl": "",
      "javaName": "setOwner",
      "friendlyName": "Set owner",
      "description": "Set owner of a path (i.e., a file or a directory). The parameters username and groupname cannot both be null.",
      "xsdName": "set-owner"
    }
  ],
  "filters": [],
  "transformers": [],
  "sources": [
    {
      "samples": [],
      "javaReturnType": {
        "javaTypeName": "",
        "fullQualifiedJavaTypeName": "void",
        "isOptional": false,
        "isRefOnly": false,
        "isPayload": false,
        "isComplexType": false,
        "isEnum": false,
        "isString": false,
        "isHttpCallback": false,
        "description": ""
      },
      "parameters": [
        {
          "javaTypeName": "String",
          "fullQualifiedJavaTypeName": "java.lang.String",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": true,
          "typeMirror": "java.lang.String",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "path",
          "description": "the path of the file to read."
        },
        {
          "javaTypeName": "int",
          "fullQualifiedJavaTypeName": "int",
          "defaultValue": "4096",
          "isOptional": true,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "int",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "bufferSize",
          "description": "the buffer size to use when reading the file."
        },
        {
          "javaTypeName": "SourceCallback",
          "fullQualifiedJavaTypeName": "org.mule.api.callback.SourceCallback",
          "isOptional": false,
          "isRefOnly": false,
          "isPayload": false,
          "isComplexType": false,
          "isEnum": false,
          "isString": false,
          "typeMirror": "org.mule.api.callback.SourceCallback",
          "isHttpCallback": false,
          "isArrayOrListOrMap": false,
          "javaName": "sourceCallback",
          "description": "the {@link SourceCallback} used to propagate the event to the rest of the flow."
        }
      ],
      "apiDocUrl": "",
      "javaName": "read",
      "friendlyName": "Read from path",
      "description": "Read the content of a file designated by its path and streams it to the rest of the flow, while adding the path metadata in the following inbound properties:\n\u003cul\u003e\n\u003cli\u003e{@link HDFSConnector#HDFS_PATH_EXISTS}: a boolean set to true if the path exists\u003c/li\u003e\n\u003cli\u003e{@link HDFSConnector#HDFS_CONTENT_SUMMARY}: an instance of {@link ContentSummary} if the path exists.\u003c/li\u003e\n\u003cli\u003e{@link HDFSConnector#HDFS_FILE_STATUS}: an instance of {@link FileStatus} if the path exists.\u003c/li\u003e\n\u003cli\u003e{@link HDFSConnector#HDFS_FILE_CHECKSUM}: an instance of {@link FileChecksum} if the path exists, is a file and has a checksum.\u003c/li\u003e\n\u003c/ul\u003e",
      "xsdName": "read"
    }
  ],
  "javaName": "HDFSConnector",
  "friendlyName": "HDFS",
  "description": "Hadoop Distributed File System (HDFS) Connector.",
  "xsdName": "hdfs"
}